Object detection and recognition can be implemented using Python with libraries like OpenCV, TensorFlow, or PyTorch. Below is an example using OpenCV and a pre-trained deep learning model for object detection and recognition. We'll use the **MobileNet-SSD** model and its Caffe implementation, a popular choice for lightweight detection.

### Steps:
1. **Download Pre-trained Model**: Use a pre-trained `MobileNet-SSD` model and its prototxt configuration.
   - Prototxt file: Defines the architecture of the network.
   - Model file: Contains the pre-trained weights.

2. **Install Required Libraries**:
   ```bash
   pip install opencv-python opencv-python-headless numpy
   ```

3. **Python Code Implementation**:

### Steps to Use:
1. **Download the MobileNet-SSD Model**:
   - Prototxt: [Download here](https://github.com/chuanqi305/MobileNet-SSD/blob/master/MobileNetSSD_deploy.prototxt)
   - Caffe model: [Download here](https://github.com/chuanqi305/MobileNet-SSD/blob/master/MobileNetSSD_deploy.caffemodel)

2. Place these files in a folder named `mobilenet_ssd`.

3. Replace `example.jpg` with the path to the image you want to process.

4. Run the script:
   ```bash
   python app.py
   ```

### Output:
The script will display the image with detected objects, their bounding boxes, and labels drawn over them.

This is a straightforward example to get started. For more advanced tasks, consider frameworks like TensorFlow or PyTorch with models like YOLO or Faster R-CNN.
